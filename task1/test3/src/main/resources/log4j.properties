### direct log messages to stdout ###
log4j.appender.chao=org.apache.log4j.ConsoleAppender
##此句为定义名为stdout的输出端是哪种类型，可以是
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.chao.Target=System.err
log4j.appender.chao.layout=org.apache.log4j.PatternLayout
##此句为定义名为stdout的输出端的layout是哪种类型，可以是
##org.apache.log4j.HTMLLayout（以HTML表格形式布局），
##org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
##org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
##org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.chao.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file mylog.log ###
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.File=e\:mylog.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=info, chao,file
#此句为将等级为INFO的日志信息输出到stdout和R这两个目的地，stdout和R的定义在下面的代码，可以任意起名。
#等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL，如果配置OFF则不打出任何信息，
#如果配置为INFO这样只显示INFO, WARN, ERROR的log信息，而DEB\UG信息不会被显示，具体讲解可参照第三部分定义配置文件中的logger。